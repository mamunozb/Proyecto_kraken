    "USERNAME1": "hmaury1@gmail.com",
    "PASSWORD1": "Hola123456*#",
    "INVALID_USERNAME": "xxx@xxx.com",
    "INVALID_PASSWORD": "123",

    "POST2": "Post ghost Edited",
    "CONPOST2": "Contenido Post ghost edited",
    "POST3": "Post ghost new",
    "CONPOST3": "Contenido Post ghost new",

@user1 @web
Scenario: hacer login con credenciales invalidas y luego con credenciales validas
  Given I navigate to page "http://localhost:2368/ghost"
  And I wait for 1 seconds
  When I enter email "<INVALID_USERNAME>"
  And I wait for 1 seconds
  And I enter password "<INVALID_PASSWORD>"
  And I wait for 1 seconds
  And I click sign in
  And I wait for 1 seconds
  Then I validate login error message
  And I wait for 1 seconds
  When I enter email "<USERNAME1>"
  And I wait for 1 seconds
  And I enter password "<PASSWORD1>"
  And I wait for 1 seconds
  And I click sign in
  And I wait for 1 seconds
  Then I validate login success

@user2 @web
Scenario: hacer login y luego ir al menu para hacer logout
  Given I navigate to page "http://localhost:2368/ghost"
  And I wait for 1 seconds
  When I enter email "<USERNAME1>"
  And I wait for 1 seconds
  And I enter password "<PASSWORD1>"
  And I wait for 1 seconds
  And I click sign in
  And I wait for 1 seconds
  And I expand profile options
  And I wait for 1 seconds
  And I click on logout
  And I wait for 1 seconds
  Then I am redirected to login page

@user3 @web
Scenario: hacer login y crear un post nuevo
  Given I navigate to page "http://localhost:2368/ghost"
  And I wait for 1 seconds
  When I enter email "<USERNAME1>"
  And I wait for 1 seconds
  And I enter password "<PASSWORD1>"
  And I wait for 1 seconds
  And I click sign in
  And I wait for 1 seconds
  And I click new post
  And I wait for 1 seconds
  And I enter name post "<POST1>"
  And I wait for 1 seconds
  And I enter content post "<CONPOST1>"
  And I wait for 1 seconds
  And I expand publish post
  And I wait for 2 seconds
  And I click publish post
  And I wait for 5 seconds
  Then I validate post was published

@user4 @web
Scenario: hacer login, crear y editar un post
  Given I navigate to page "http://localhost:2368/ghost"
  And I wait for 1 seconds
  When I enter email "<USERNAME1>"
  And I wait for 1 seconds
  And I enter password "<PASSWORD1>"
  And I wait for 1 seconds
  And I click sign in
  And I wait for 1 seconds
  And I click new post
  And I wait for 1 seconds
  And I enter name post "<POST3>"
  And I wait for 1 seconds
  And I enter content post "<CONPOST3>"
  And I wait for 1 seconds
  And I expand publish post
  And I wait for 2 seconds
  And I click publish post
  And I wait for 5 seconds
  And I click post
  And I wait for 2 seconds
  Then I search post "<POST3>" in the list
  And I wait for 2 seconds
  When I enter name post "<POST2>"
  And I wait for 2 seconds
  And I enter content post "<CONPOST2>"
  And I wait for 1 seconds
  And I expand publish post
  And I wait for 2 seconds
  And I click publish post
  And I wait for 5 seconds
  And I click post
  And I wait for 2 seconds
  Then I search post "<POST2>" in the list

  @user5 @web
Scenario: hacer login, crear y eliminar un post
  Given I navigate to page "http://localhost:2368/ghost"
  And I wait for 1 seconds
  When I enter email "<USERNAME1>"
  And I wait for 1 seconds
  And I enter password "<PASSWORD1>"
  And I wait for 1 seconds
  And I click sign in
  And I wait for 1 seconds
  And I click new post
  And I wait for 1 seconds
  And I enter name post "<POST3>"
  And I wait for 1 seconds
  And I enter content post "<CONPOST3>"
  And I wait for 1 seconds
  And I expand publish post
  And I wait for 2 seconds
  And I click publish post
  And I wait for 5 seconds
  And I click post
  And I wait for 2 seconds
  Then I search post "<POST3>" in the list
  And I wait for 2 seconds
  When I expand setting post
  And I wait for 2 seconds
  And I scroll to buttom
  And I wait for 2 seconds
  And I click delete post
  And I wait for 2 seconds
  And I click to confirm delete post
  And I wait for 2 seconds
  Then I am redirected to posts list



Then('I validate login error message', async function () {
    let element = await this.driver.$('p.main-error');
    return assert.notEqual(element, undefined)
});

Then('I validate login success', async function () {
    let element = await this.driver.$('.gh-nav-menu-details-blog');
    return assert.notEqual(element, undefined)
});

When('I expand profile options', async function () {
    let element = await this.driver.$('.gh-nav-bottom > div.pointer');
    return await element.click();
});

When('I click on logout', async function () {
    let element = await this.driver.$('a[href="#/signout/"]');
    return await element.click();
});

Then('I am redirected to login page', async function () {
    let url = await this.driver.getUrl();
    return assert.equal(url.includes('/ghost/#/signin'), true)
});

When('I expand publish post', async function () {
    let element = await this.driver.$('div.gh-publishmenu-trigger');
    return await element.click();
});

When('I click publish post', async function () {
    let element = await this.driver.$('button.gh-publishmenu-button');
    return await element.click();
});

Then('I validate post was published', async function () {
    let element = await this.driver.$('div.gh-publishmenu-trigger');
    return assert.equal((await element.getText()).trim(), "Update");
});

When('I expand setting post', async function () {
    let element = await this.driver.$('button.post-settings');
    return await element.click();
});

When('I scroll to buttom', async function () {
    let element = await this.driver.$('.settings-menu-content');
    return await element.scrollIntoView({ block: "end" });
});

When('I click delete post', async function () {
    let element = await this.driver.$('button.settings-menu-delete-button');
    return await element.click();
});

When('I click to confirm delete post', async function () {
    let element = await this.driver.$('.modal-content > .modal-footer > button.gh-btn-red');
    return await element.click();
});

Then('I am redirected to posts list', async function () {
    let url = await this.driver.getUrl();
    return assert.equal(url.includes('ghost/#/posts'), true)
});

Then('I search post {kraken-string} in the list', async function (post) {
    let index = await this.driver.$$('.posts-list li > a > h3')
        .findIndex(async x => (await x.getText()).trim() == post)
    assert.notEqual(index, -1);
    let elementLinks = await this.driver.$$(`.posts-list li > a`);
    return await elementLinks[index].click();
});